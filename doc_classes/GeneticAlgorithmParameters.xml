<?xml version="1.0" encoding="UTF-8" ?>
<class name="GeneticAlgorithmParameters" inherits="EvolutionaryAlgorithmParameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Classic genetic algorithm.
	</brief_description>
	<description>
		Mostly meant for binary problems, it does not exploit continous values as efficiently.
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="crossover_mode" type="int" setter="set_crossover_mode" getter="get_crossover_mode" default="0">
		</member>
		<member name="is_binary" type="bool" setter="set_is_binary" getter="get_is_binary" default="false">
		</member>
		<member name="mutation_mode" type="int" setter="set_mutation_mode" getter="get_mutation_mode" default="0">
		</member>
		<member name="mutation_radius" type="float" setter="set_mutation_radius" getter="get_mutation_radius" default="0.5">
		</member>
		<member name="mutation_rate" type="float" setter="set_mutation_rate" getter="get_mutation_rate" default="0.05">
		</member>
		<member name="selection_elitism_rate" type="float" setter="set_elitism_rate" getter="get_elitism_rate" default="0.05">
		</member>
		<member name="selection_rate" type="float" setter="set_selection_rate" getter="get_selection_rate" default="0.5">
		</member>
		<member name="selection_tournament_size" type="int" setter="set_tournament_size" getter="get_tournament_size" default="4">
		</member>
	</members>
	<constants>
		<constant name="EA::GeneticAlgorithm::MUTATION_UNIFORM" value="0" enum="MutationMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::MUTATION_GAUSSIAN" value="1" enum="MutationMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::MUTATION_NONE" value="2" enum="MutationMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::CROSSOVER_ONE_POINT" value="0" enum="CrossoverMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::CROSSOVER_TWO_POINT" value="1" enum="CrossoverMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::CROSSOVER_UNIFORM" value="2" enum="CrossoverMode">
		</constant>
		<constant name="EA::GeneticAlgorithm::CROSSOVER_NONE" value="3" enum="CrossoverMode">
		</constant>
	</constants>
</class>
