[gd_scene load_steps=7 format=3 uid="uid://6rb6dcomjc1o"]

[ext_resource type="JSON" path="res://demo/Examples/ImageCompression/image_state.json" id="1_2pcgb"]
[ext_resource type="Script" path="res://demo/Examples/ImageCompression/dispatcher.gd" id="1_2t3dg"]
[ext_resource type="Script" path="res://demo/Examples/ImageCompression/CompressorHandler.gd" id="3_cy0ge"]
[ext_resource type="Texture2D" uid="uid://x0tf68moidd4" path="res://demo/Examples/ImageCompression/painting.png" id="4_twjiu"]
[ext_resource type="Texture2D" uid="uid://3d7hwscbfmem" path="res://addons/evolutionary_agents/icons/helix.svg" id="5_4ujxc"]

[sub_resource type="SepCMAESParameters" id="SepCMAESParameters_ueuk0"]
bound_enabled = true

[node name="ImageCompression" type="ProblemOptimizer" node_paths=PackedStringArray("problem")]
problem = NodePath("OptimizableProblem")
population_size = 35
stored_state = ExtResource("1_2pcgb")
stored_save_state = true
evolutionary_algorithm_parameters = SubResource("SepCMAESParameters_ueuk0")
debug_verbose = true
debug_log_csv = true

[node name="OptimizableProblem" type="OptimizableProblem" parent="." node_paths=PackedStringArray("dispatcher")]
genome_size = 640
script = ExtResource("3_cy0ge")
dispatcher = NodePath("../SplatRenderer")

[node name="SplatRenderer" type="Node" parent="." node_paths=PackedStringArray("_renderer")]
script = ExtResource("1_2t3dg")
_dataTexture = ExtResource("4_twjiu")
_computeShader = "res://demo/Examples/ImageCompression/voronoi_renderer.glsl"
_renderer = NodePath("../AspectRatioContainer/TextureRect")
output_dir = "res://demo/Examples/ImageCompression/out"

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="TextureRect" type="TextureRect" parent="AspectRatioContainer"]
layout_mode = 2
texture = ExtResource("5_4ujxc")

[connection signal="generation_ended" from="." to="OptimizableProblem" method="_on_image_compression_generation_ended"]
[connection signal="started" from="OptimizableProblem" to="OptimizableProblem" method="_on_started"]
